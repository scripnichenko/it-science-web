name: Deploy Site

on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  set-deploy-type:
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.set-output.outputs.target }}
    steps:
      - uses: actions/checkout@v4

      - name: get deployment target
        run: |
          TARGET=$(cat DEPLOY_STRATEGY)
          echo "TARGET=$TARGET" >> $GITHUB_ENV

      - name: check if target is valid
        if: success() && !contains(fromJSON('["gh-pages", "firebase", "none"]'), env.TARGET)
        run: echo 'Invalid Deployment Target' && exit 1

      # gh actions doesn't support using the 'env' context on job level ifs for
      # some reason smh. here we use outputs instead
      - name: set output to deploy target
        id: set-output
        run: echo "::set-output name=target::${{ env.TARGET }}"

  # not sure if anyone wants this but I'm putting this here for those that don't
  # want to host their site. else the actions will show an annoying x whenever
  # you push to master
  deploy-none:
    runs-on: ubuntu-latest
    needs: set-deploy-type
    if: needs.set-deploy-type.outputs.target == 'none'
    steps:
      - run: echo 'No Deployment Specified' && exit 0

  deploy-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: deploy-gh-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      
  deploy-firebase:
    runs-on: ubuntu-latest
    needs: set-deploy-type
    if: needs.set-deploy-type.outputs.target == 'firebase'

    steps:
    - uses: actions/checkout@v4

    - name: setup ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: build jekyll
      run: |
        bundle install
        bundle exec jekyll build

    - name: deploy to firebase
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
